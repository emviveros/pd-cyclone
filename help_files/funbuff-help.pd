#N canvas 390 29 573 576 10;
#X obj 2 557 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 699 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 815 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 86 568 cnv 17 3 82 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 2 45 cnv 15 552 48 empty empty funbuff 4 14 0 18 -204280 -1
0;
#X obj 86 708 cnv 17 3 35 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 86 671 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 13 71 store x \, y pairs of numbers together;
#X obj 495 53 funbuff;
#C restore;
#N canvas 269 95 605 613 more 0;
#X msg 74 43 1 10 \, 2 20 \, 3 3.33;
#X floatatom 189 137 5 0 0 0 - - -, f 5;
#X obj 198 492 print funbuff;
#X msg 121 72 4 4.4;
#X msg 142 98 4 44.4;
#X msg 77 277 clear;
#X msg 232 190 embed \$1;
#X obj 232 170 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X msg 245 245 goto \$1;
#X floatatom 245 225 5 0 0 0 - - -, f 5;
#X msg 256 277 next;
#X msg 270 316 min;
#X msg 270 335 max;
#X msg 74 332 write;
#X msg 62 392 read;
#X msg 382 419 read /tmp/test.funbuff;
#X msg 382 398 write /tmp/test.funbuff;
#X obj 198 466 funbuff /tmp/test.funbuff;
#C restore;
#X obj 2 2 cnv 15 600 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 7 3 More funbuff messages;
#X obj 201 48 cyclone/comment 120 11 helvetica ? 0 80 80 80 store x
y pairs;
#X obj 193 101 cyclone/comment 226 11 helvetica ? 0 80 80 80 replace
a previously stored y value;
#X obj 227 139 cyclone/comment 226 11 helvetica ? 0 80 80 80 retrieve
corresponding y value;
#X obj 298 179 cyclone/comment 244 11 helvetica ? 0 80 80 80 with nonzero
arg the contents of the object are saved with the patch \, this is
the default behaviour;
#X obj 299 245 cyclone/comment 203 11 helvetica ? 0 80 80 80 jump to
x position and output y value;
#X obj 293 280 cyclone/comment 211 11 helvetica ? 0 80 80 80 jump to
next position and output y value;
#X obj 299 317 cyclone/comment 211 11 helvetica ? 0 80 80 80 output
smallest;
#X obj 299 336 cyclone/comment 211 11 helvetica ? 0 80 80 80 or largest
stored y value;
#X obj 313 380 cyclone/comment 220 11 helvetica ? 0 80 80 80 with filename
as argument no dialog appears:;
#X obj 359 471 cyclone/comment 116 11 helvetica ? 0 80 80 80 argument
sets initial filename to load;
#X obj 42 261 cyclone/comment 116 11 helvetica ? 0 80 80 80 erase contents
;
#X obj 28 319 cyclone/comment 116 11 helvetica ? 0 80 80 80 save contents
;
#X obj 29 378 cyclone/comment 116 11 helvetica ? 0 80 80 80 load contents
;
#X obj 212 520 cyclone/comment 25 11 helvetica ? 0 80 80 80 ----;
#X obj 211 517 cyclone/comment 25 11 helvetica ? 0 80 80 80 |;
#X obj 209 511 cyclone/comment 25 11 helvetica ? 0 80 80 80 ^;
#X obj 232 517 cyclone/comment 79 11 helvetica ? 0 80 80 80 see results
of print object in Pd main window;
#X connect 0 0 17 0;
#X connect 1 0 17 0;
#X connect 3 0 17 0;
#X connect 4 0 17 0;
#X connect 5 0 17 0;
#X connect 6 0 17 0;
#X connect 7 0 6 0;
#X connect 8 0 17 0;
#X connect 9 0 8 0;
#X connect 10 0 17 0;
#X connect 11 0 17 0;
#X connect 12 0 17 0;
#X connect 13 0 17 0;
#X connect 14 0 17 0;
#X connect 15 0 17 0;
#X connect 16 0 17 0;
#X connect 17 0 2 0;
#X restore 446 513 pd more funbuff;
#X obj 86 753 cnv 17 3 25 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 86 783 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 117 826 the default filename;
#X obj 2 2 cyclone/fancy/cyheader;
#X obj 2 874 cnv 3 550 3 empty empty empty 0 0 0 4 -262144 -1 0;
#X obj 2 854 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#N canvas 499 104 375 383 META 0;
#X text 0 20 LICENSE SIBSD;
#X text 0 173 LIBRARY cyclone;
#X text 0 193 VERSION 0.2-beta1;
#X text 0 211 AUTHOR Krzysztof Czaja;
#X text 1 229 RELEASE_DATE 2002;
#X text 2 248 WEBSITE http://suita.chopin.edu.pl/~czaja/miXed/externs/cyclone.html
;
#X text 0 0 KEYWORDS control storage max_compatible;
#X text 0 102 INLET_1 float;
#X text 0 120 OUTLET_0 float;
#X text 0 136 OUTLET_1 float;
#X text 0 153 OUTLET_2 bang;
#X text 0 59 INLET_0 bang float list clear copy delete embed dump find
goto interp interptab min next paste print read select set undo write
;
#X text 0 40 DESCRIPTION store x \, y pairs of numbers together;
#X text 2 280 HELP_PATCH_AUTHORS Christoph Kummerer. Revised by Jonathan
Wilkes for Pd-extended 0.42 to conform to the PDDP template. Alex Cleveland
updated this patch for Pd-l2ork version 2013.05.28. Fred Jan Kraan
adapted the patch to pd-extended 2015-02-02. Esteban Viveros updated
this patch for Pd-Vanilla 0.46-7.;
#X restore 494 856 pd META;
#N canvas 339 145 430 83 Related_objects 0;
#X obj 2 2 cnv 15 425 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 8 3 Related Objects;
#X obj 50 33 table;
#X obj 12 33 line;
#X obj 97 33 cyclone/coll;
#C restore;
#X obj 186 33 cyclone/Table;
#C restore;
#X restore 198 856 pd Related_objects;
#X obj 469 535 cnv 12 73 19 empty empty empty 0 0 0 18 -257983 -1 0
;
#N canvas 280 51 785 662 Examples 0;
#X obj 2 2 cnv 15 780 40 empty empty funbuff 3 12 0 18 -204280 -1 0
;
#X obj 2 638 cnv 15 780 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X text 39 25 examples;
#X msg 46 374 set 1 2 4 5 7 8 11 12 13 14;
#X msg 62 399 goto 0;
#X msg 84 430 next;
#X floatatom 62 542 5 0 0 0 - - -, f 5;
#X floatatom 81 512 5 0 0 0 - - -, f 5;
#X obj 101 486 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X floatatom 689 148 5 0 0 0 - - -, f 5;
#X floatatom 628 186 5 0 0 0 - - -, f 5;
#X floatatom 628 250 5 0 0 0 - - -, f 5;
#X obj 341 300 print funbuff2;
#X msg 328 140 bang;
#X msg 286 115 set 1 1 2 2.2 3 3.5;
#X msg 341 176 delete 1 1;
#X msg 348 201 delete 2;
#X msg 461 231 delete 3 4;
#X obj 101 171 print funbuffY;
#X obj 82 203 print funbuffX;
#X msg 26 68 1 2 \, 3 4 \, 5 6 \, 7 8;
#X msg 75 96 dump;
#X obj 82 136 funbuff;
#C restore;
#X obj 62 464 funbuff;
#C restore;
#X obj 628 215 funbuff;
#C restore;
#X obj 341 260 funbuff;
#C restore;
#X obj 104 232 cyclone/comment 25 11 helvetica ? 0 80 80 80 ----;
#X obj 103 229 cyclone/comment 25 11 helvetica ? 0 80 80 80 |;
#X obj 101 223 cyclone/comment 25 11 helvetica ? 0 80 80 80 ^;
#X obj 124 485 cyclone/comment 120 11 helvetica ? 0 80 80 80 we reached
the end...;
#X obj 117 514 cyclone/comment 100 11 helvetica ? 0 80 80 80 difference
between current and preview x value;
#X obj 75 559 cyclone/comment 246 11 helvetica ? 0 80 80 80 y value
;
#X obj 119 429 cyclone/comment 168 11 helvetica ? 0 80 80 80 <--- hit
this a couple of times;
#X obj 111 400 cyclone/comment 168 11 helvetica ? 0 80 80 80 goto start
;
#X obj 24 338 cyclone/comment 168 11 helvetica ? 0 80 80 80 the outher
outlets make sense too:;
#X obj 46 359 cyclone/comment 168 11 helvetica ? 0 80 80 80 load some
values:;
#X obj 144 67 cyclone/comment 168 11 helvetica ? 0 80 80 80 <-- load
some values;
#X obj 112 96 cyclone/comment 168 11 helvetica ? 0 80 80 80 and dump
them;
#X obj 274 97 cyclone/comment 168 11 helvetica ? 0 80 80 80 another
way to store pairs:;
#X obj 364 140 cyclone/comment 168 11 helvetica ? 0 80 80 80 print
status info;
#X obj 412 176 cyclone/comment 168 11 helvetica ? 0 80 80 80 delete
matching pair;
#X obj 405 203 cyclone/comment 168 11 helvetica ? 0 80 80 80 delete
pair where x=2;
#X obj 433 218 cyclone/comment 168 11 helvetica ? 0 80 80 80 no! we
don't have it:;
#X obj 546 111 cyclone/comment 196 11 helvetica ? 0 80 80 80 ... and
again another way to load data:;
#X obj 659 131 cyclone/comment 196 11 helvetica ? 0 80 80 80 set y
value first;
#X obj 594 159 cyclone/comment 78 11 helvetica ? 0 80 80 80 then x
\, and use x to retrieve y:;
#X msg 300 369 set 0 0 10 100 30 200;
#X obj 333 464 funbuff;
#C restore;
#X msg 333 426 interp 18;
#X floatatom 333 506 5 0 0 0 - - -, f 5;
#X obj 460 373 cyclone/comment 119 11 helvetica ? 0 80 80 80 click
and store pairs 0 \, 0 and 10 \, 100 and 30 \, 200;
#X obj 400 424 cyclone/comment 88 11 helvetica ? 0 80 80 80 compare
18 to its x value neighbors 10 and 30;
#X obj 438 373 cyclone/comment 119 11 helvetica ? 0 80 80 80 <---;
#X obj 370 506 cyclone/comment 110 11 helvetica ? 0 80 80 80 140 is
40% of the way from 100 to 200 \, just as 18 is 40% of the way from
10 to 30;
#X obj 536 535 funbuff;
#C restore;
#X msg 566 507 interp 18;
#X floatatom 536 567 5 0 0 0 - - -, f 5;
#X obj 634 513 cyclone/comment 168 11 helvetica ? 0 80 80 80 compare
18 to its x value neighbors 10 and 30;
#X msg 553 473 delete 10;
#X obj 324 395 s fb2;
#X obj 536 450 r fb2;
#X obj 514 431 cyclone/comment 119 11 helvetica ? 0 80 80 80 ... at
last:;
#X obj 621 460 cyclone/comment 129 11 helvetica ? 0 80 80 80 delete
the pair that has an x value of 10 (10 \, 100);
#X obj 522 588 cyclone/comment 202 11 helvetica ? 0 80 80 80 120 is
60% of the way from 0 to 200 \, just as 18 is 60% of the way from 0
to 30;
#X obj 284 347 cyclone/comment 168 11 helvetica ? 0 80 80 80 come on
estimate some values:;
#X obj 124 230 cyclone/comment 79 11 helvetica ? 0 80 80 80 see results
of print object in Pd main window;
#X connect 3 0 23 0;
#X connect 4 0 23 0;
#X connect 5 0 23 0;
#X connect 9 0 24 1;
#X connect 10 0 24 0;
#X connect 13 0 25 0;
#X connect 14 0 25 0;
#X connect 15 0 25 0;
#X connect 16 0 25 0;
#X connect 17 0 25 0;
#X connect 20 0 22 0;
#X connect 21 0 22 0;
#X connect 22 0 19 0;
#X connect 22 1 18 0;
#X connect 23 0 6 0;
#X connect 23 1 7 0;
#X connect 23 2 8 0;
#X connect 24 0 11 0;
#X connect 25 0 12 0;
#X connect 46 0 47 0;
#X connect 46 0 59 0;
#X connect 47 0 49 0;
#X connect 48 0 47 0;
#X connect 54 0 56 0;
#X connect 55 0 54 0;
#X connect 58 0 54 0;
#X connect 60 0 54 0;
#X restore 469 535 pd Examples;
#X floatatom 37 496 5 0 0 0 - - -, f 5;
#X floatatom 119 496 5 0 0 0 - - -, f 5;
#X obj 202 495 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 37 512 cyclone/comment 35 11 helvetica ? 0 80 80 80 value output
;
#X obj 102 513 cyclone/comment 90 11 helvetica ? 0 80 80 80 element
count (next message);
#X obj 197 514 cyclone/comment 93 11 helvetica ? 0 80 80 80 "next"
reached end (send 1 to reset);
#X msg 363 130 goto 2;
#X msg 369 149 next;
#X msg 376 173 clear;
#X obj 380 198 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 384 222 dump;
#X msg 385 251 find 4;
#X msg 381 292 interp 4;
#X obj 410 135 cyclone/comment 120 11 helvetica ? 0 80 80 80 "goto
n" can be used to specify the "next" event;
#X obj 420 173 cyclone/comment 243 11 helvetica ? 0 80 80 80 clear
all data;
#X obj 402 200 cyclone/comment 243 11 helvetica ? 0 80 80 80 information
;
#X obj 420 224 cyclone/comment 243 11 helvetica ? 0 80 80 80 dump all
;
#X obj 432 252 cyclone/comment 88 11 helvetica ? 0 80 80 80 "find n"
outputs all x values at which n is stored;
#X obj 441 292 cyclone/comment 243 11 helvetica ? 0 80 80 80 interpolate
;
#X obj 363 317 s fb;
#X msg 19 182 1 2;
#X msg 49 182 3 4;
#X msg 79 182 5 6;
#X msg 109 182 5 3;
#X obj 37 436 r fb;
#X obj 19 214 s fb;
#X obj 18 131 cyclone/comment 123 11 helvetica ? 0 80 80 80 list of
two numbers in left (or int in right followed by int in left) inserts
or replaces a list element;
#X msg 145 148 -2;
#X msg 174 148 1;
#X msg 203 148 2;
#X msg 232 148 3;
#X msg 261 148 4;
#X msg 290 148 5;
#X floatatom 290 187 5 0 0 0 - - -, f 5;
#X obj 290 209 s fb;
#X obj 158 182 cyclone/comment 123 11 helvetica ? 0 80 80 80 an int
causes the corresponding (or closest) int to be output;
#X msg 267 387 select 3 5;
#X msg 278 408 cut;
#X msg 279 433 copy;
#X obj 267 464 s fb;
#X obj 266 362 cyclone/comment 123 11 helvetica ? 0 80 80 80 selects
the region of the funbuff from x to x+y;
#X obj 316 413 cyclone/comment 107 11 helvetica ? 0 80 80 80 cut/copy
the selected region to a global funbuff clipboard;
#X obj 440 400 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 440 447 funbuff;
#C restore;
#X obj 37 469 cyclone/funbuff;
#C restore;
#X msg 468 421 undo;
#X msg 461 400 paste;
#X obj 453 369 cyclone/comment 80 11 helvetica ? 0 80 80 80 one may
paste among funbufs;
#X msg 141 342 embed 0;
#X msg 193 342 embed 1;
#X obj 139 315 cyclone/comment 116 11 helvetica ? 0 80 80 80 save funbuff
in patcher: no (default) -- yes --;
#X obj 141 374 s fb;
#X msg 121 291 write;
#X msg 88 291 read;
#X obj 163 289 cyclone/comment 243 11 helvetica ? 0 80 80 80 file I/O
;
#X obj 13 108 cyclone/comment 38 14 helvetica ? 0 80 80 80 Store;
#X obj 344 108 cyclone/comment 73 14 helvetica ? 0 80 80 80 Manage
;
#X obj 75 265 cyclone/comment 59 14 helvetica ? 0 80 80 80 Recall;
#X obj 62 447 cyclone/comment 147 14 helvetica ? 0 80 80 80 ... see
the results here;
#N canvas 554 51 609 691 allMessages 0;
#X obj 226 51 cnv 9 365 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 226 2 cnv 15 365 46 empty empty Description 128 20 0 12 -187701
-1 0;
#X obj 226 574 cnv 9 365 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 226 598 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 788 cnv 10 589 12 empty empty empty 20 12 0 5 -187701 -33289
0;
#X obj 2 766 cnv 15 589 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 2 51 cnv 9 222 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 574 cnv 9 222 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 598 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 2 cnv 15 222 46 empty empty Message 78 20 0 12 -187701 -1
0;
#X obj 226 75 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 75 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 226 187 cnv 9 365 46 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 187 cnv 9 222 46 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 226 235 cnv 9 365 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 235 cnv 9 222 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 226 259 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 259 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 226 343 cnv 9 365 60 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 343 cnv 9 222 60 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 226 670 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 670 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X text 9 53 clear;
#X text 238 53 Erases all x-y pairs., f 55;
#X text 9 77 copy;
#X text 238 77 Copies the x-y pair selected by the select message to
the global funbuff clipboard., f 55;
#X text 9 238 dump;
#X text 238 238 Dumps all x-y pairs to the middle and left outlets.
, f 55;
#X obj 226 295 cnv 9 365 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 295 cnv 9 222 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X text 9 261 embed <number>;
#X text 238 261 A non-zero <number> will make the buffer contents persistent
in the patch., f 55;
#X text 9 190 delete <xValue> <yValue>;
#X text 238 190 With two numbers \, delete the pair of floats if both
<xValue> and <yValue> match. with one number \, deletes the pair when
<xValue> matches., f 55;
#X text 9 298 goto <xValue>;
#X text 238 298 Sets the buffer pointer to the specified <xValue>.
, f 55;
#X obj 226 111 cnv 9 365 74 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj 2 111 cnv 9 222 74 empty empty not_implemented_yet 35 40 0 14
-261234 -66577 0;
#X text 9 113 cut;
#X text 238 113 Copies the current selection (made by using the select
message) into the global funbuff clipboard and deletes it from the
funbuff object. The data stored on this clipboard can then be pasted
into another funbuff object using the paste message., f 55;
#X obj 226 319 cnv 9 365 22 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 319 cnv 9 222 22 empty empty empty 20 12 0 14 -216373 -66577
0;
#X text 9 322 find <yValue>;
#X text 238 322 Finds the x values which have y as their <yValue>.
, f 55;
#X text 9 347 interp <xValue>;
#X text 238 345 If a x-y pair with the specified <xValue> exists \,
send the y value to the left outlet. If the x does not exist \, interpolate
the y value from the two neigbouring x-y pair y values and send this
value., f 55;
#X obj 226 405 cnv 9 365 22 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 405 cnv 9 222 22 empty empty empty 20 12 0 14 -216373 -66577
0;
#X text 9 406 interptab <xValue> <t>;
#X text 238 407 Same as interp \, but uses the table <t> as buffer.
, f 55;
#X obj 226 429 cnv 9 365 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 429 cnv 9 222 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X text 9 431 min;
#X text 238 431 Sends the lowest y value in the bugger to the left
outlet., f 55;
#X obj 226 465 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 465 cnv 9 222 34 empty empty empty 20 20 0 14 -216373 -66577
0;
#X text 9 466 max;
#X text 238 467 Sends the highest y value in the bugger to the left
outlet., f 55;
#X obj 226 501 cnv 9 365 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 501 cnv 9 222 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X text 9 505 next;
#X text 238 503 Finds the y value matching the buffer pointer to x
(or greater) and sends it to the left outlet., f 55;
#X obj 226 538 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 538 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X text 9 540 paste;
#X text 238 540 Adds the x-y pairs from the global funbuff clipboard
to the funbuff buffer., f 55;
#X text 9 576 print;
#X text 238 576 Prints status information in Pd main window., f 55
;
#X text 9 600 read <fileName>;
#X text 238 600 Read buffer contens from a <fileName>. If no <fileName>
is provided \, a file open box is shown., f 55;
#X obj 226 634 cnv 9 365 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 634 cnv 9 222 34 empty empty empty 20 12 0 14 -257983 -66577
0;
#X text 9 636 select <range> <index>;
#X text 238 636 Selects a <range> of x-y pairs \, starting from <index>
for copy \, cut and paste operations., f 55;
#X text 9 673 set <xValue> <yValue>;
#X text 238 672 Defines the pair x-y in the funbuff buffer. More than
one pair is allowed., f 55;
#X obj 226 706 cnv 9 365 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X obj 2 706 cnv 9 222 22 empty empty empty 20 12 0 14 -257983 -66577
0;
#X text 9 709 undo;
#X text 238 709 Undoes the latest cut or paste operation., f 55;
#X obj 226 730 cnv 9 365 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X obj 2 730 cnv 9 222 34 empty empty empty 20 12 0 14 -216373 -66577
0;
#X text 9 733 write <fileName>;
#X text 238 732 Writes buffer contents to a file <fileName>. If no
<fileName> is provided \, a file open box is shown., f 55;
#X restore 395 637 pd allMessages;
#X text 158 571 -;
#X text 125 571 bang;
#X text 158 589 -;
#X text 119 589 float;
#X text 158 637 -;
#X text 107 637 message;
#X text 173 637 for a complete list of messages see:, f 60;
#X text 173 571 prints status information in Pd main window., f 60
;
#X text 173 589 x value of a x-y pair., f 60;
#X text 158 607 -;
#X text 125 607 list;
#X text 173 607 defines the pair x y in the funbuff buffer. More than
one pair is allowed., f 60;
#X text 158 672 -;
#X text 119 672 float;
#X text 158 710 -;
#X text 119 710 float;
#X text 173 710 the y value corresponding with the x (or a lower x)
received on the left inlet. On a next message the y value of the next
greater x is send.;
#X text 158 754 -;
#X text 119 754 float;
#X text 173 672 y value of an x-y pair., f 60;
#X text 173 754 on a next message the difference with the previous
x value is send., f 60;
#X text 158 785 -;
#X text 125 785 bang;
#X text 173 785 when the end of the buffer is reached., f 60;
#X connect 26 0 39 0;
#X connect 27 0 39 0;
#X connect 28 0 39 0;
#X connect 29 0 39 0;
#X connect 30 0 39 0;
#X connect 31 0 39 0;
#X connect 32 0 39 0;
#X connect 40 0 45 0;
#X connect 41 0 45 0;
#X connect 42 0 45 0;
#X connect 43 0 45 0;
#X connect 44 0 64 0;
#X connect 47 0 53 0;
#X connect 48 0 53 0;
#X connect 49 0 53 0;
#X connect 50 0 53 0;
#X connect 51 0 53 0;
#X connect 52 0 53 0;
#X connect 53 0 54 0;
#X connect 56 0 59 0;
#X connect 57 0 59 0;
#X connect 58 0 59 0;
#X connect 62 0 63 0;
#X connect 64 0 20 0;
#X connect 64 1 21 0;
#X connect 64 2 22 0;
#X connect 65 0 63 0;
#X connect 66 0 63 0;
#X connect 68 0 71 0;
#X connect 69 0 71 0;
#X connect 72 0 71 0;
#X connect 73 0 71 0;
